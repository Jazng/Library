<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.self.library.dao.BookDao">
    <resultMap id="BaseResultMap" type="com.self.library.entity.BookEntity">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="book_name" jdbcType="VARCHAR" property="bookName"/>
        <result column="book_no" jdbcType="VARCHAR" property="bookNo"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="show" jdbcType="BIT" property="show"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
        <result column="lend" jdbcType="INTEGER" property="lend"/>
        <result column="tag_id" jdbcType="INTEGER" property="tagId"/>
        <result column="publish_id" jdbcType="INTEGER" property="publishId"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="publish_date" jdbcType="TIMESTAMP" property="publishDate"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="modify_user" jdbcType="VARCHAR" property="modifyUser"/>
        <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, book_name, book_no, price, `show`, `count`, lend, tag_id, publish_id, author, publish_date,
    create_user, create_date, modify_user, modify_date
  </sql>
    <select id="selectByExample" parameterType="com.self.library.entity.BookExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_book
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_book
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_book
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.self.library.entity.BookExample">
        delete from t_book
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.self.library.entity.BookEntity">
    insert into t_book (id, book_name, book_no, 
      price, `show`, `count`, lend,
      tag_id, publish_id, author, 
      publish_date, create_user, create_date, 
      modify_user, modify_date)
    values (#{id,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{bookNo,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{show,jdbcType=BIT}, #{count,jdbcType=INTEGER}, #{lend,jdbcType=INTEGER}, 
      #{tagId,jdbcType=INTEGER}, #{publishId,jdbcType=INTEGER}, #{author,jdbcType=VARCHAR}, 
      #{publishDate,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{modifyUser,jdbcType=VARCHAR}, #{modifyDate,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.self.library.entity.BookEntity">
        insert into t_book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bookName != null">
                book_name,
            </if>
            <if test="bookNo != null">
                book_no,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="show != null">
                `show`,
            </if>
            <if test="count != null">
                `count`,
            </if>
            <if test="lend != null">
                lend,
            </if>
            <if test="tagId != null">
                tag_id,
            </if>
            <if test="publishId != null">
                publish_id,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="publishDate != null">
                publish_date,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="modifyUser != null">
                modify_user,
            </if>
            <if test="modifyDate != null">
                modify_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="bookName != null">
                #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="bookNo != null">
                #{bookNo,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="show != null">
                #{show,jdbcType=BIT},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
            <if test="lend != null">
                #{lend,jdbcType=INTEGER},
            </if>
            <if test="tagId != null">
                #{tagId,jdbcType=INTEGER},
            </if>
            <if test="publishId != null">
                #{publishId,jdbcType=INTEGER},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="publishDate != null">
                #{publishDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyUser != null">
                #{modifyUser,jdbcType=VARCHAR},
            </if>
            <if test="modifyDate != null">
                #{modifyDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.self.library.entity.BookExample" resultType="java.lang.Long">
        select count(*) from t_book
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_book
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.bookName != null">
                book_name = #{record.bookName,jdbcType=VARCHAR},
            </if>
            <if test="record.bookNo != null">
                book_no = #{record.bookNo,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DECIMAL},
            </if>
            <if test="record.show != null">
                `show` = #{record.show,jdbcType=BIT},
            </if>
            <if test="record.count != null">
                `count` = #{record.count,jdbcType=INTEGER},
            </if>
            <if test="record.lend != null">
                lend = #{record.lend,jdbcType=INTEGER},
            </if>
            <if test="record.tagId != null">
                tag_id = #{record.tagId,jdbcType=INTEGER},
            </if>
            <if test="record.publishId != null">
                publish_id = #{record.publishId,jdbcType=INTEGER},
            </if>
            <if test="record.author != null">
                author = #{record.author,jdbcType=VARCHAR},
            </if>
            <if test="record.publishDate != null">
                publish_date = #{record.publishDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createUser != null">
                create_user = #{record.createUser,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.modifyUser != null">
                modify_user = #{record.modifyUser,jdbcType=VARCHAR},
            </if>
            <if test="record.modifyDate != null">
                modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_book
        set id = #{record.id,jdbcType=INTEGER},
        book_name = #{record.bookName,jdbcType=VARCHAR},
        book_no = #{record.bookNo,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=DECIMAL},
        `show` = #{record.show,jdbcType=BIT},
        `count`` = #{record.count,jdbcType=INTEGER},
        lend = #{record.lend,jdbcType=INTEGER},
        tag_id = #{record.tagId,jdbcType=INTEGER},
        publish_id = #{record.publishId,jdbcType=INTEGER},
        author = #{record.author,jdbcType=VARCHAR},
        publish_date = #{record.publishDate,jdbcType=TIMESTAMP},
        create_user = #{record.createUser,jdbcType=VARCHAR},
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
        modify_user = #{record.modifyUser,jdbcType=VARCHAR},
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.self.library.entity.BookEntity">
        update t_book
        <set>
            <if test="bookName != null">
                book_name = #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="bookNo != null">
                book_no = #{bookNo,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="show != null">
                `show` = #{show,jdbcType=BIT},
            </if>
            <if test="count != null">
                `count` = #{count,jdbcType=INTEGER},
            </if>
            <if test="lend != null">
                lend = #{lend,jdbcType=INTEGER},
            </if>
            <if test="tagId != null">
                tag_id = #{tagId,jdbcType=INTEGER},
            </if>
            <if test="publishId != null">
                publish_id = #{publishId,jdbcType=INTEGER},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="publishDate != null">
                publish_date = #{publishDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyUser != null">
                modify_user = #{modifyUser,jdbcType=VARCHAR},
            </if>
            <if test="modifyDate != null">
                modify_date = #{modifyDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.self.library.entity.BookEntity">
    update t_book
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_no = #{bookNo,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      `show` = #{show,jdbcType=BIT},
      `count` = #{count,jdbcType=INTEGER},
      lend = #{lend,jdbcType=INTEGER},
      tag_id = #{tagId,jdbcType=INTEGER},
      publish_id = #{publishId,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_user = #{modifyUser,jdbcType=VARCHAR},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <insert id="saveBooks">
        insert into t_book(book_name, book_no, price, `show`, `count`, lend, tag_id, publish_id, author, publish_date,
        create_user)
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.bookName},
            #{item.bookNo},
            #{item.price},
            #{item.show},
            #{item.count},
            #{item.lend},
            #{item.tagId},
            #{item.publishId},
            #{item.author},
            #{item.publishDate},
            #{item.createUser}
            )
        </foreach>
    </insert>

    <update id="updateCount">
    update t_book set `lend` = `lend` + #{count} where id = #{id}
  </update>

    <update id="updateMinusList">
        <foreach collection="list" item="item" separator=";">
            update t_book set `lend` = `lend` - #{item.lend}, modify_user = #{item.modifyUser} where id = #{item.id}
        </foreach>
    </update>

    <update id="updatePlusList">
        <foreach collection="list" item="item" separator=";">
            update t_book set `lend` = `lend` + #{item.lend}, modify_user = #{item.modifyUser} where id = #{item.id}
        </foreach>
    </update>

    <update id="updateMinusOne">
        update t_book set `lend` = `lend` - #{lend}, modify_user = #{modifyUser} where id = #{id}
    </update>

    <update id="updatePlusOne">
        update t_book set `lend` = `lend` + #{lend}, modify_user = #{modifyUser} where id = #{id}
    </update>
</mapper>